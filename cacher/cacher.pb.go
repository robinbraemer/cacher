// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cacher.proto

package cacher

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Entry struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  []byte   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{0}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Entry) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type SetRequest struct {
	Entry                *Entry   `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{1}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type SetReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetReply) Reset()         { *m = SetReply{} }
func (m *SetReply) String() string { return proto.CompactTextString(m) }
func (*SetReply) ProtoMessage()    {}
func (*SetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{2}
}

func (m *SetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReply.Unmarshal(m, b)
}
func (m *SetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReply.Marshal(b, m, deterministic)
}
func (m *SetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReply.Merge(m, src)
}
func (m *SetReply) XXX_Size() int {
	return xxx_messageInfo_SetReply.Size(m)
}
func (m *SetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetReply proto.InternalMessageInfo

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{3}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetReply struct {
	Val                  []byte   `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReply) Reset()         { *m = GetReply{} }
func (m *GetReply) String() string { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()    {}
func (*GetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{4}
}

func (m *GetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReply.Unmarshal(m, b)
}
func (m *GetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReply.Marshal(b, m, deterministic)
}
func (m *GetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReply.Merge(m, src)
}
func (m *GetReply) XXX_Size() int {
	return xxx_messageInfo_GetReply.Size(m)
}
func (m *GetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReply proto.InternalMessageInfo

func (m *GetReply) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type DelRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRequest) Reset()         { *m = DelRequest{} }
func (m *DelRequest) String() string { return proto.CompactTextString(m) }
func (*DelRequest) ProtoMessage()    {}
func (*DelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{5}
}

func (m *DelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRequest.Unmarshal(m, b)
}
func (m *DelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRequest.Marshal(b, m, deterministic)
}
func (m *DelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRequest.Merge(m, src)
}
func (m *DelRequest) XXX_Size() int {
	return xxx_messageInfo_DelRequest.Size(m)
}
func (m *DelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelRequest proto.InternalMessageInfo

func (m *DelRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DelReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelReply) Reset()         { *m = DelReply{} }
func (m *DelReply) String() string { return proto.CompactTextString(m) }
func (*DelReply) ProtoMessage()    {}
func (*DelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{6}
}

func (m *DelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelReply.Unmarshal(m, b)
}
func (m *DelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelReply.Marshal(b, m, deterministic)
}
func (m *DelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelReply.Merge(m, src)
}
func (m *DelReply) XXX_Size() int {
	return xxx_messageInfo_DelReply.Size(m)
}
func (m *DelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelReply.DiscardUnknown(m)
}

var xxx_messageInfo_DelReply proto.InternalMessageInfo

type AllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllRequest) Reset()         { *m = AllRequest{} }
func (m *AllRequest) String() string { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()    {}
func (*AllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{7}
}

func (m *AllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllRequest.Unmarshal(m, b)
}
func (m *AllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllRequest.Marshal(b, m, deterministic)
}
func (m *AllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRequest.Merge(m, src)
}
func (m *AllRequest) XXX_Size() int {
	return xxx_messageInfo_AllRequest.Size(m)
}
func (m *AllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllRequest proto.InternalMessageInfo

type AllReply struct {
	Entry                *Entry   `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllReply) Reset()         { *m = AllReply{} }
func (m *AllReply) String() string { return proto.CompactTextString(m) }
func (*AllReply) ProtoMessage()    {}
func (*AllReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb7d8dcbbf6a4aae, []int{8}
}

func (m *AllReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllReply.Unmarshal(m, b)
}
func (m *AllReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllReply.Marshal(b, m, deterministic)
}
func (m *AllReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllReply.Merge(m, src)
}
func (m *AllReply) XXX_Size() int {
	return xxx_messageInfo_AllReply.Size(m)
}
func (m *AllReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AllReply.DiscardUnknown(m)
}

var xxx_messageInfo_AllReply proto.InternalMessageInfo

func (m *AllReply) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*Entry)(nil), "cacher.Entry")
	proto.RegisterType((*SetRequest)(nil), "cacher.SetRequest")
	proto.RegisterType((*SetReply)(nil), "cacher.SetReply")
	proto.RegisterType((*GetRequest)(nil), "cacher.GetRequest")
	proto.RegisterType((*GetReply)(nil), "cacher.GetReply")
	proto.RegisterType((*DelRequest)(nil), "cacher.DelRequest")
	proto.RegisterType((*DelReply)(nil), "cacher.DelReply")
	proto.RegisterType((*AllRequest)(nil), "cacher.AllRequest")
	proto.RegisterType((*AllReply)(nil), "cacher.AllReply")
}

func init() { proto.RegisterFile("cacher.proto", fileDescriptor_fb7d8dcbbf6a4aae) }

var fileDescriptor_fb7d8dcbbf6a4aae = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xdd, 0x4a, 0x03, 0x31,
	0x10, 0x85, 0x37, 0x2e, 0x5b, 0xe2, 0x71, 0x85, 0x92, 0xab, 0x22, 0x52, 0x4a, 0xbc, 0x29, 0x88,
	0xad, 0xd6, 0x27, 0x28, 0x56, 0x72, 0x9f, 0x3e, 0x41, 0x2d, 0x03, 0x82, 0xc1, 0xd6, 0x35, 0x0a,
	0xfb, 0x80, 0xbe, 0x97, 0x4c, 0xda, 0x38, 0x5d, 0x54, 0xe8, 0xdd, 0xfc, 0x7c, 0x67, 0x4e, 0x0e,
	0x41, 0xbd, 0x5e, 0xad, 0x9f, 0xa9, 0x99, 0x6c, 0x9b, 0x4d, 0xdc, 0x98, 0xde, 0xae, 0xb3, 0xd7,
	0xa8, 0x1e, 0x5f, 0x63, 0xd3, 0x9a, 0x3e, 0xca, 0x17, 0x6a, 0x07, 0x6a, 0xa4, 0xc6, 0xa7, 0x9e,
	0x4b, 0x9e, 0x7c, 0xae, 0xc2, 0xe0, 0x64, 0xa4, 0xc6, 0xb5, 0xe7, 0xd2, 0xde, 0x01, 0x4b, 0x8a,
	0x9e, 0xde, 0x3e, 0xe8, 0x3d, 0x9a, 0x2b, 0x54, 0xc4, 0xd2, 0xa4, 0x39, 0x9b, 0x9d, 0x4f, 0xf6,
	0x06, 0xe9, 0x9e, 0xdf, 0xed, 0x2c, 0xa0, 0x93, 0x64, 0x1b, 0x5a, 0x3b, 0x04, 0x9c, 0xc8, 0x7f,
	0x19, 0xda, 0x4b, 0x68, 0xb7, 0x67, 0xb3, 0xb9, 0x12, 0xf3, 0x21, 0xb0, 0xa0, 0xf0, 0xbf, 0x1a,
	0xd0, 0x69, 0xcf, 0x4e, 0x35, 0x30, 0x0f, 0x99, 0xb5, 0x53, 0xe8, 0xd4, 0xf1, 0xdd, 0x63, 0x1e,
	0x3d, 0xfb, 0x52, 0xa8, 0x1e, 0x78, 0x6e, 0x6e, 0x50, 0x2e, 0x29, 0x1a, 0x93, 0x31, 0x89, 0x7f,
	0xd1, 0xef, 0xcc, 0xd8, 0xb5, 0x60, 0xdc, 0x1d, 0xe2, 0xee, 0x0f, 0xdc, 0x75, 0xf0, 0x05, 0x05,
	0xc1, 0x25, 0x9f, 0xe0, 0x3f, 0x99, 0x0a, 0x33, 0x45, 0x39, 0x0f, 0x07, 0xb8, 0x44, 0x14, 0x3c,
	0x07, 0xb5, 0xc5, 0xad, 0x7a, 0xea, 0xa5, 0xbf, 0xbe, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x2d,
	0x59, 0xc6, 0xdd, 0xfb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheClient is the client API for Cache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheClient interface {
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetReply, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
	Del(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*DelReply, error)
	All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (Cache_AllClient, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetReply, error) {
	out := new(SetReply)
	err := c.cc.Invoke(ctx, "/cacher.Cache/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := c.cc.Invoke(ctx, "/cacher.Cache/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) Del(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*DelReply, error) {
	out := new(DelReply)
	err := c.cc.Invoke(ctx, "/cacher.Cache/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (Cache_AllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Cache_serviceDesc.Streams[0], "/cacher.Cache/All", opts...)
	if err != nil {
		return nil, err
	}
	x := &cacheAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Cache_AllClient interface {
	Recv() (*AllReply, error)
	grpc.ClientStream
}

type cacheAllClient struct {
	grpc.ClientStream
}

func (x *cacheAllClient) Recv() (*AllReply, error) {
	m := new(AllReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CacheServer is the server API for Cache service.
type CacheServer interface {
	Set(context.Context, *SetRequest) (*SetReply, error)
	Get(context.Context, *GetRequest) (*GetReply, error)
	Del(context.Context, *DelRequest) (*DelReply, error)
	All(*AllRequest, Cache_AllServer) error
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cacher.Cache/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cacher.Cache/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cacher.Cache/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Del(ctx, req.(*DelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_All_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AllRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CacheServer).All(m, &cacheAllServer{stream})
}

type Cache_AllServer interface {
	Send(*AllReply) error
	grpc.ServerStream
}

type cacheAllServer struct {
	grpc.ServerStream
}

func (x *cacheAllServer) Send(m *AllReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cacher.Cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _Cache_Set_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Cache_Get_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _Cache_Del_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "All",
			Handler:       _Cache_All_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cacher.proto",
}
